{"version":3,"sources":["state/index.js","constants.js","components/Assessment/Question.js","components/Config.js","components/Assessment/Dimension.js","components/Assessment/ProgressBar.js","components/Assessment/Questionnaire.js","components/Results/Results.js","components/Header.js","components/LandingPage.js","components/DemoFields.js","App.js","serviceWorker.js","index.js","state/initial.js","assets/cog.svg","assets/emo.svg","assets/phy.svg","assets/fin.svg","assets/spi.svg","assets/logo.png"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","ASSESSMENT_ORDER","useStyles","makeStyles","theme","questionContainer","margin","color","question","fontWeight","display","paddingBottom","Question","text","reverse","subdimension","dimension","index","totalQs","setCanContinue","classes","answers","setState","useState","answer","setAnswer","saveAnswer","score","ansArray","answerObj","length","includes","undefined","useEffect","className","FormControl","component","FormLabel","RadioGroup","row","aria-label","name","onChange","e","target","ans","parseInt","FormControlLabel","labelPlacement","control","Radio","label","style","marginBottom","fontStyle","postsUrl","window","location","hostname","withRouter","history","currentDimensionIndex","setCurrentDimensionIndex","currentDimension","subdimentions","setSubdimentions","currentSubdimentionIndex","setCurrentSubdimentionIndex","canContinue","loading","setLoading","fetchQuestions","url","fetch","method","then","response","json","console","log","setupAnswerObj","catch","error","forEach","sub","slug","CircularProgress","fontSize","textAlign","acf","questions","map","q","i","key","reverse_sort","marginTop","Button","variant","disabled","onClick","scrollTo","top","left","behavior","push","progressWrapper","progressSegment","width","height","filter","opacity","cog","emo","phy","fin","spi","ProgressBar","dimColors","dim","src","alt","email","age","income","weight","gender","occupation","marital","average","array","avg","reduce","a","b","parseFloat","toFixed","min","max","obj","proceed","Object","keys","entries","dataSend","results","urlObj","grandTotal","dimTotal","property","arr","item","substr","formatForURL","demo","nodupe","Math","floor","random","parts","hasOwnProperty","encodeURIComponent","join","toQueryString","Header","id","Logo","content","setContent","rendered","fetchContent","ReactHtmlParser","form","marginRight","setName","setEmail","setAge","setIncome","setWeight","setHeight","setError","invalidEmail","setInvalidEmail","invalidName","setInvalidName","setGender","setOccupation","setMarital","nameRef","useRef","emailRef","onSubmit","event","preventDefault","current","focus","formControl","TextField","required","ref","onBlur","helperText","test","Typography","type","exact","path","render","LandingPage","Questionnaire","DemoFields","Results","Boolean","match","createBrowserHistory","ReactDOM","questionnaireId","questionnaireTitle","cognitive","emotional","physical","financial","spiritual","state","newState","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"wPAEaA,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAIQI,EAAgB,kBAAMC,qBAAWV,ICVjCW,EAAmB,CAAC,YAAY,YAAY,WAAW,YAAY,a,sDCU1EC,EAAYC,aAAW,SAACC,GAAD,MAAU,CACnCC,kBAAmB,CACfC,OAAQ,cACR,mCAAoC,CAChCC,MAAO,wBAGfC,SAAU,CACNC,WAAY,IACZC,QAAS,QACTC,cAAe,QAuDRC,EAnDE,SAAC,GAAwE,IAAvEC,EAAsE,EAAtEA,KAAKC,EAAiE,EAAjEA,QAAQC,EAAyD,EAAzDA,aAAaC,EAA4C,EAA5CA,UAAUC,EAAkC,EAAlCA,MAAMC,EAA4B,EAA5BA,QAAQC,EAAoB,EAApBA,eAC3DC,EAAUlB,IADqE,EAExDH,IAFwD,mBAE7EsB,EAF6E,KAE7EA,QAASC,EAFoE,OAI1DC,mBAAS,GAJiD,mBAI9EC,EAJ8E,KAIvEC,EAJuE,KAsB/EC,EAAa,SAAAC,GACf,IAPkBC,EAOdC,EAAS,eAAOR,GACpBQ,EAAUb,GAAWD,GAAcE,GAASU,EAC5CL,EAAS,CAACD,QAAQQ,KATAD,EAUJC,EAAUb,GAAWD,IATvBe,SAAWZ,GAAYU,EAASG,cAASC,IACjDb,GAAe,IAevB,OAJAc,qBAAU,WACNR,EAAU,KACX,CAACV,EAAaC,IAGb,yBAAKkB,UAAWd,EAAQf,mBACpB,kBAAC8B,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,SAASF,UAAWd,EAAQZ,UAAWK,GAC5D,kBAACyB,EAAA,EAAD,CAAYC,KAAG,EAACC,aAAW,iBAAiBC,KAAK,UAAU5C,MAAO2B,EAAQkB,SAhCjE,SAAAC,GACjB,GAAGA,EAAEC,OAAO/C,MAAM,CACd,IAAIgD,EAAMF,EAAEC,OAAO/C,MACC,SAAjB8C,EAAEC,OAAO/C,QACRgD,EAAMC,SAASH,EAAEC,OAAO/C,QAE5B4B,EAAUoB,GACVnB,EAAWmB,MA0BH,kBAACE,EAAA,EAAD,CAAkBC,eAAe,MAAMnD,MAAOiB,EAAU,EAAI,EAAGmC,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACzF,kBAACJ,EAAA,EAAD,CAAkBC,eAAe,MAAMnD,MAAOiB,EAAU,EAAI,EAAGmC,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACzF,kBAACJ,EAAA,EAAD,CAAkBC,eAAe,MAAMnD,MAAiB,EAAOoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACzF,kBAACJ,EAAA,EAAD,CAAkBC,eAAe,MAAMnD,MAAOiB,EAAU,EAAI,EAAGmC,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACzF,kBAACJ,EAAA,EAAD,CAAkBC,eAAe,MAAMnD,MAAOiB,EAAU,EAAI,EAAGmC,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,MACzF,4BAAQC,MAAO,CAAC9C,OAAQ,GAAG+C,aAAa,EAAEC,UAAW,WAArD,UACA,kBAACP,EAAA,EAAD,CAAkBC,eAAe,MAAMnD,MAAM,OAAOoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAK,+B,SClEpFI,GAFIC,QAAUA,OAAOC,UAAYD,OAAOC,SAASC,UAE7B3B,SAAS,iBAAmB,sCAAwC,oCCyHtF4B,eAjHG,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,QAAQC,EAAoD,EAApDA,sBAAsBC,EAA8B,EAA9BA,yBAA8B,EACxD/D,IAAZsB,EADoE,oBACpEA,QAEF0C,EAAmB9D,EAAiB4D,GAHkC,EAIlCtC,mBAAS,MAJyB,mBAIrEyC,EAJqE,KAItDC,EAJsD,OAKZ1C,mBAAS,GALG,mBAKrE2C,EALqE,KAK3CC,EAL2C,OAMtC5C,oBAAS,GAN6B,mBAMrE6C,EANqE,KAMxDjD,EANwD,OAQ9CI,oBAAS,GARqC,mBAQrE8C,EARqE,KAQ5DC,EAR4D,KAU5ErC,qBAAU,WACNsC,MAEF,CAACR,IAEH,IAgBMQ,EAAiB,WACnBD,GAAW,GACX,IAAIE,EAAG,UAAMjB,EAAN,0BAAgCQ,EAAhC,iCACPU,MAAMD,EAAK,CACPE,OAAQ,QAEXC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAC,GACHN,GAAW,GACXQ,QAAQC,IAAIH,GACZT,EAA4B,GAC5BF,EAAiBW,GACjBI,EAAeJ,MAElBK,OAAO,SAAAC,GACJZ,GAAW,GACXQ,QAAQC,IAAIG,MAGhB,IAAMF,EAAiB,SAAAJ,GACnB,IAAI/C,EAAS,eAAOR,GACpBuD,EAASO,SAAQ,SAAAC,GACbvD,EAAUkC,GAAkBqB,EAAIC,MAAQ,QAMpD,OAAIrB,EAgBA,6BACKK,EACG,6BACI,uCACA,kBAACiB,EAAA,EAAD,OAGJ,oCACI,uBAAGlC,MAAO,CAACE,UAAU,SAASiC,SAAS,KAAvC,yJAGA,uBAAGnC,MAAO,CAACE,UAAU,SAASiC,SAAS,GAAGC,UAAU,WACpD,gCADA,yBAC8B,gCAD9B,qBACwD,gCADxD,+BAC4F,gCAD5F,mBACoH,gCADpH,sBAICxB,EAAcE,GAA0BuB,IAAIC,UAAUC,KAAI,SAACC,EAAEC,GAC1D,OACI,kBAAC,EAAD,CACI7E,UAAW+C,EACXhD,aAAciD,EAAcE,GAA0BmB,KACtDS,IAAKD,EACL5E,MAAO4E,EACP/E,QAAS8E,EAAEG,aACXlF,KAAM+E,EAAEpF,SACRU,QAAS8C,EAAcE,GAA0BuB,IAAIC,UAAU5D,OAC/DX,eAAgBA,OAI5B,yBAAKiC,MAAO,CAAC4C,UAAU,KACnB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAW/B,EAAagC,QA1FpD,WAChB5C,OAAO6C,SAAS,CACZC,IAAK,EACLC,KAAM,EACNC,SAAU,WAEdrF,GAAe,GACX6C,EAAclC,OAASoC,EAA2B,EAClDC,EAA4BD,EAAyB,GAC9CjE,EAAiB6B,OAAS+B,EAAsB,EACvDC,EAAyBD,EAAsB,GAE/CD,EAAQ6C,KAAK,cA8ED,eA5CZ,oCACKpC,EACG,6BACI,uCACA,kBAACiB,EAAA,EAAD,OAGJ,S,qFCpEdpF,EAAYC,aAAW,iBAAK,CAC9BuG,gBAAiB,CACbhG,QAAS,QACT8E,UAAW,UAEfmB,gBAAiB,CACbjG,QAAS,eACTkG,MAAO,MACPtG,OAAQ,OACRuG,OAAQ,EAER,QAAS,CACLC,OAAQ,eACRC,QAAS,GACTH,MAAO,KAGfI,IAAK,CAED,QAAS,CACLF,OAAQ,OACRC,QAAS,IAGjBE,IAAK,CAED,QAAS,CACLH,OAAQ,OACRC,QAAS,IAGjBG,IAAK,CAED,QAAS,CACLJ,OAAQ,OACRC,QAAS,IAGjBI,IAAK,CAED,QAAS,CACLL,OAAQ,OACRC,QAAS,IAGjBK,IAAK,CAED,QAAS,CACLN,OAAQ,OACRC,QAAS,QAiCNM,EA5BK,SAAC,GAA6B,IAA5BxD,EAA2B,EAA3BA,sBACZzC,EAAUlB,IAIhB,OAFA4E,QAAQC,IAAI3D,EAAQkG,WAGhB,yBAAKpF,UAAWd,EAAQsF,iBACnBzG,EAAiB0F,KAAI,SAAC4B,EAAI1B,GACvB,OACI,yBAAKC,IAAKD,EAAG3D,UAAS,UAAKd,EAAQuF,gBAAb,iCAChB,IAAJd,GAAShC,GAAyBgC,EAClCzE,EAAQ4F,IAAU,IAAJnB,GAAShC,GAAyBgC,EAChDzE,EAAQ6F,IAAU,IAAJpB,GAAShC,GAAyBgC,EAChDzE,EAAQ8F,IAAU,IAAJrB,GAAShC,GAAyBgC,EAChDzE,EAAQ+F,IAAU,IAAJtB,GAAShC,GAAyBgC,EAChDzE,EAAQgG,IAAM,KACJ,IAANvB,GAAW,yBAAK2B,IAAKR,IAAKS,IAAI,mBACxB,IAAN5B,GAAW,yBAAK2B,IAAKP,IAAKQ,IAAI,mBACxB,IAAN5B,GAAW,yBAAK2B,IAAKN,IAAKO,IAAI,mBACxB,IAAN5B,GAAW,yBAAK2B,IAAKL,IAAKM,IAAI,mBACxB,IAAN5B,GAAW,yBAAK2B,IAAKJ,IAAKK,IAAI,yBCnEzC9D,eAXO,WAAO,IAAD,EACiCpC,mBAAS,GAD1C,mBACjBsC,EADiB,KACKC,EADL,KAGxB,OACI,oCACI,kBAAC,EAAD,CAAaD,sBAAuBA,IACpC,kBAAC,EAAD,CAAWA,sBAAuBA,EAAuBC,yBAA0BA,QC2FhFH,eA9FC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,QAAc,EAYzB7D,IAZyB,sBAE5BsB,EAF4B,EAE5BA,QACAoB,EAH4B,EAG5BA,KACAiF,EAJ4B,EAI5BA,MACAC,EAL4B,EAK5BA,IACAC,EAN4B,EAM5BA,OACAC,EAP4B,EAO5BA,OACAhB,EAR4B,EAQ5BA,OACAiB,EAT4B,EAS5BA,OACAC,EAV4B,EAU5BA,WACAC,EAX4B,EAW5BA,QAGEC,EAAU,SAAAC,GACZ,IAAIC,EAAMD,EAAME,QAAO,SAACC,EAAGC,GAAJ,OAAUxF,SAASuF,GAAKvF,SAASwF,MAAMJ,EAAMpG,OACpE,OAAOyG,WAAWJ,EAAIK,QAAQ,KAyEhC,OArBAvG,qBAAU,WACR,IALkBwG,EAAKC,EAVPC,EAeZC,GAAU,EAOd,GANAC,OAAOC,KAAKzH,GAAS8D,SAAQ,SAAAW,GACxB+C,OAAOE,QAAQ1H,EAAQyE,IAAMhE,OAAS,IACvC8G,GAAU,MAIXA,EAAQ,CACT,IAAII,EA1Da,SAAAC,GACnBnE,QAAQC,IAAIkE,GACZ,IAAIC,EAAS,GACTC,EAAa,GACjB,IAAK,IAAI/D,KAAO6D,EAAS,CACvB,IAAIG,EAAW,GACf,IAAK,IAAIC,KAAYJ,EAAQ7D,GAAK,CAChC,IAAIkE,EAAML,EAAQ7D,GAAKiE,GAAUvC,QAAO,SAAAyC,GAAI,MAAa,SAATA,KAChD,GAAGD,EAAIxH,OAAO,CACZ,IAAIgE,EAAG,UAAMV,EAAIoE,OAAO,EAAE,GAAnB,YAAyBH,GAC5BlB,EAAmB,EAAbF,EAAQqB,GAClBJ,EAAOpD,GAAOqC,EACdiB,EAAS3C,KAAK0B,GACdgB,EAAW1C,KAAK0B,IAGjBiB,EAAStH,SACVoH,EAAO,KAAD,OAAM9D,EAAN,WAAqB6C,EAAQmB,IAKvC,OAFAF,EAAO,mBAAqBjB,EAAQkB,GACpCrE,QAAQC,IAAImE,GACLA,EAoCUO,CAAapI,GAvBdsH,EAwBSK,EAvB3B,CAAC,CAAC,YAAevG,GAAO,CAACiF,MAAOA,GAAQ,CAACC,IAAKA,GAAM,CAACC,OAAQA,GAAS,CAACC,OAAQA,GAAS,CAAChB,OAAQA,GAAS,CAACiB,OAAQA,GAAS,CAACC,WAAYA,GAAa,CAACC,QAASA,IAAU7C,SAAQ,SAACuE,GACjL,IAAI5D,EAAM+C,OAAOC,KAAKY,GAAM,GACX,KAAdA,EAAK5D,KACN6C,EAAI7C,GAAO4D,EAAK5D,QAoBhBkD,EAjBGL,KAmBDK,EAASW,QAhBKlB,EAgBiB,EAhBZC,EAgBc,OAfhCkB,KAAKC,MAAMD,KAAKE,UAAYpB,EAAMD,IAAQA,GAgB3CjF,OAAOC,SAAP,UAAqBF,EAArB,oBArCN,SAAuBoF,GACrB,IAAIoB,EAAQ,GACZ,IAAK,IAAIlE,KAAK8C,EACNA,EAAIqB,eAAenE,IACnBkE,EAAMtD,KAAKwD,mBAAmBpE,GAAK,IAAMoE,mBAAmBtB,EAAI9C,KAGxE,OAAOkE,EAAMG,KAAK,KA8B2BC,CAAcnB,UAGzDpF,EAAQ6C,KAAK,OAGd,IAGD,kBAACnB,EAAA,EAAD,S,kCCvFW8E,EARA,WACX,OACI,yBAAKC,GAAG,UACJ,yBAAKA,GAAG,OAAO7C,IAAK8C,IAAM7C,IAAI,eC+C3B9D,eA7CK,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAEDrC,oBAAS,GAFR,mBAExB8C,EAFwB,KAEfC,EAFe,OAGD/C,mBAAS,IAHR,mBAGxBgJ,EAHwB,KAGfC,EAHe,KA2B/B,OAJAvI,qBAAU,YAlBW,WACjBqC,GAAW,GACX,IAAIE,EAAG,UAAMjB,EAAN,4BACPkB,MAAMD,EAAK,CACPE,OAAQ,QAEXC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAC,GACHN,GAAW,GACXkG,EAAW5F,EAAS2F,QAAQE,aAE/BxF,OAAO,SAAAC,GACJZ,GAAW,GACXQ,QAAQC,IAAIG,MAMhBwF,KACF,IAGE,oCACI,kBAAC,EAAD,MACCrG,EACG,6BACI,uCACA,kBAACiB,EAAA,EAAD,OAGJ,oCACKqF,IAAgBJ,GACjB,kBAACtE,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAAS,WAAKxC,EAAQ6C,KAAK,gBAAvD,e,0BCjCdvG,EAAYC,aAAW,iBAAK,CAC9ByK,KAAM,CACF,yBAA0B,CACtBhE,MAAO,MACPiE,YAAa,KACbxH,aAAc,GACd,0BAA0B,CACtBuD,MAAM,cAwHPjD,eAlHI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACXxC,EAAUlB,IADc,EAERH,IAFQ,yCAEpBuB,EAFoB,OAINC,mBAAS,IAJH,mBAIvBkB,EAJuB,KAIjBqI,EAJiB,OAKJvJ,mBAAS,IALL,mBAKvBmG,EALuB,KAKhBqD,EALgB,OAMRxJ,mBAAS,IAND,mBAMvBoG,EANuB,KAMlBqD,EANkB,OAOFzJ,mBAAS,IAPP,mBAOvBqG,EAPuB,KAOfqD,EAPe,OAQF1J,mBAAS,IARP,mBAQvBsG,EARuB,KAQfqD,EARe,OASF3J,mBAAS,IATP,mBASvBsF,EATuB,KASfsE,EATe,OAUJ5J,mBAAS,IAVL,mBAUvB2D,EAVuB,KAUhBkG,EAVgB,OAWU7J,oBAAS,GAXnB,mBAWvB8J,EAXuB,KAWTC,EAXS,OAYQ/J,oBAAS,GAZjB,mBAYvBgK,GAZuB,KAYVC,GAZU,QAaFjK,mBAAS,UAbP,qBAavBuG,GAbuB,MAaf2D,GAbe,SAcMlK,mBAAS,WAdf,qBAcvBwG,GAduB,MAcX2D,GAdW,SAeAnK,mBAAS,UAfT,qBAevByG,GAfuB,MAed2D,GAfc,MAiBxBC,GAAUC,iBAAO,MACjBC,GAAWD,iBAAO,MA2CxB,OACI,0BAAM3J,UAAWd,EAAQwJ,KAAMmB,SA1Cd,SAACC,GAElB,GADAA,EAAMC,iBACFV,IAAeF,EAaf,OAZAvG,QAAQC,IAAI,QACZqG,EAAS,6CACLG,IACGK,GAAQM,SACPN,GAAQM,QAAQC,aAGpBd,GACGS,GAASI,SACRJ,GAASI,QAAQC,SAKzB7K,EAAS,CACLmB,OACAiF,QACAC,MACAC,SACAC,SACAhB,SACAiB,UACAC,cACAC,aAEJpE,EAAQ6C,KAAK,iBAeb,yCACA,yBAAKvE,UAAWd,EAAQgL,aACpB,kBAACC,EAAA,EAAD,CAAWnG,QAAQ,WAAWoG,UAAU,EAAMC,IAAKX,GAASzI,MAAM,OAAO+B,MAAOqG,GAAa1L,MAAO4C,EAAMC,SAAU,SAACsJ,GAAD,OAASlB,EAAQkB,EAAMpJ,OAAO/C,QAAQ2M,OARjJ,WACjBhB,GAAwB,KAAT/I,MAQP,kBAAC4J,EAAA,EAAD,CAAWnG,QAAQ,WAAWoG,UAAU,EAAMC,IAAKT,GAAU3I,MAAM,QAAQ+B,MAAOmG,EAAcoB,WAAYpB,EAAe,iBAAmB,GAAIxL,MAAO6H,EAAOhF,SAAU,SAACsJ,GAAD,OAASjB,EAASiB,EAAMpJ,OAAO/C,QAAQ2M,OAdvM,WAElBlB,GADgB,wJACWoB,KAAKhF,QAc5B,kBAACvF,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,UACA,kBAACE,EAAA,EAAD,CAAYE,aAAW,SAASC,KAAK,UAAU5C,MAAOiI,GAAQpF,SAAU,SAACsJ,GAAD,OAASP,GAAUO,EAAMpJ,OAAO/C,SACpG,kBAACkD,EAAA,EAAD,CAAkBlD,MAAM,SAASoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,WAC3D,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,OAAOoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,SACzD,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,YAAYoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,6BAGtE,yBAAKjB,UAAWd,EAAQgL,aACpB,kBAACC,EAAA,EAAD,CAAWnG,QAAQ,WAAW/C,MAAM,iBAAiBtD,MAAO8H,EAAKjF,SAAU,SAACsJ,GAAD,OAAShB,EAAOgB,EAAMpJ,OAAO/C,UACxG,kBAACwM,EAAA,EAAD,CAAWnG,QAAQ,WAAW/C,MAAM,qCAAqCtD,MAAO+H,EAAQlF,SAAU,SAACsJ,GAAD,OAASf,EAAUe,EAAMpJ,OAAO/C,WAEtI,yBAAKqC,UAAWd,EAAQgL,aACpB,kBAACC,EAAA,EAAD,CAAWnG,QAAQ,WAAW/C,MAAM,oBAAoBtD,MAAOgH,EAAQnE,SAAU,SAACsJ,GAAD,OAASb,EAAUa,EAAMpJ,OAAO/C,UACjH,kBAACwM,EAAA,EAAD,CAAWnG,QAAQ,WAAW/C,MAAM,oBAAoBtD,MAAOgI,EAAQnF,SAAU,SAACsJ,GAAD,OAASd,EAAUc,EAAMpJ,OAAO/C,WAErH,yBAAKqC,UAAWd,EAAQgL,aACpB,6BACA,kBAACjK,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,cACA,kBAACE,EAAA,EAAD,CAAYE,aAAW,aAAaC,KAAK,aAAa5C,MAAOkI,GAAYrF,SAAU,SAACsJ,GAAD,OAASN,GAAcM,EAAMpJ,OAAO/C,SACnH,kBAACkD,EAAA,EAAD,CAAkBlD,MAAM,UAAUoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,YAC5D,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,eAAeoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,iBACjE,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,UAAUoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,YAC5D,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,QAAQoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,YAIlE,kBAAChB,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,kBACA,kBAACE,EAAA,EAAD,CAAYE,aAAW,iBAAiBC,KAAK,UAAU5C,MAAOmI,GAAStF,SAAU,SAACsJ,GAAD,OAASL,GAAWK,EAAMpJ,OAAO/C,SAC9G,kBAACkD,EAAA,EAAD,CAAkBlD,MAAM,SAASoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,WAC3D,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,UAAUoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,YAC5D,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,iBAAiBoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,kCACnE,kBAACJ,EAAA,EAAD,CAAkBlD,MAAM,QAAQoD,QAAS,kBAACC,EAAA,EAAD,MAAWC,MAAM,aAKrE+B,GAAS,kBAACyH,EAAA,EAAD,CAAYvJ,MAAO,CAAC7C,MAAM,YAAa2E,GACjD,6BACA,kBAACe,EAAA,EAAD,CAAQC,QAAQ,YAAY0G,KAAK,UAAjC,gBCnHGjJ,eAbH,SAAC,GAA0B,EAAxBF,SAAwB,EAAdG,QACvB,OACE,yBAAKyG,GAAG,kBACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,IAAIC,OAAQC,IAC9B,kBAAC,IAAD,CAAOF,KAAK,cAAcC,OAAQE,IAClC,kBAAC,IAAD,CAAOH,KAAK,aAAaC,OAAQG,IACjC,kBAAC,IAAD,CAAOJ,KAAK,WAAWC,OAAQI,SCHnBC,QACW,cAA7B5J,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS2J,MACvB,2DCPN,IAAMzJ,GAAU0J,cAEhBC,IAASR,OACP,kBAAC,EAAD,CAAerN,aCdF,CACX8N,gBAAiB,KACjBC,mBAAoB,KACpB/H,UAAW,GACXrE,QAAS,CACLqM,UAAW,GACXC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,UAAW,IAEfrL,KAAM,MACNiF,MAAO,YACPC,IAAK,KACLC,OAAQ,SACRC,OAAQ,MACRhB,OAAQ,YACRiB,OAAQ,OACRC,WAAY,eACZC,QAAS,UDLgCvI,QbFtB,SAACsO,EAAOC,GAAR,mBAAC,eAA0BD,GAAUC,KaGxD,kBAAC,IAAD,CAAQpK,QAASA,IACf,kBAAC,EAAD,QAGJqK,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1J,MAAK,SAAA2J,GACJA,EAAaC,gBAEdtJ,OAAM,SAAAC,GACLJ,QAAQI,MAAMA,EAAMsJ,a,mBGzI5BC,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.e5f91e79.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n\nexport const reducer = (state, newState) => ({ ...state, ...newState });\n","export const ASSESSMENT_ORDER = ['cognitive','emotional','physical','financial','spiritual'];\n\nexport const COLORS = {\n    cognitive: [ //blues\n        \"#23239a\",\n        \"#3838a4\", \n        \"#4e4eae\",\n        \"#6565b8\", \n        \"#6565b8\", \n        \"#6565b8\", \n        \"#6565b8\", \n        \"#9191cc\", \n        \"#bdbde0\"\n    ],\n    emotional: [ //reds\n        \"#ee2020\",\n        \"#ef3636\",\n        \"#f14c4c\",\n        \"#f36262\",\n        \"#f36262\",\n        \"#f36262\",\n        \"#f36262\",\n        \"#f47979\",\n        \"#f68f8f\",\n    ],\n    physical: [ //oranges\n        \"#f98525\",\n        \"#f9913a\",\n        \"#fa9d50\",\n        \"#faa966\",\n        \"#fbb57c\",\n        \"#fcc292\",\n        \"#fcc292\",\n        \"#fcc292\",\n        \"#fccea7\",\n    ],\n    financial: [ //greens\n        \"#3d8b31\",\n        \"#509645\",\n        \"#63a25a\",\n        \"#63a25a\",\n        \"#63a25a\",\n        \"#63a25a\",\n        \"#77ad6e\"\n    ],\n    spiritual: [ //turquoise\n        \"#40e0d0\",\n        \"#66e6d9\",\n        \"#8cece2\",\n        \"#9fefe7\",\n        \"#c5f5f0\",\n        \"#c5f5f0\",\n        \"#c5f5f0\",\n        \"#c5f5f0\",\n        \"#d8f8f5\"\n    ]\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport { useStateValue } from '../../state';\n\nconst useStyles = makeStyles((theme)=>({\n    questionContainer: {\n        margin: '30px 0 50px',\n        '& .MuiFormLabel-root.Mui-focused': {\n            color: 'rgba(0, 0, 0, 0.54)'\n        }\n    },\n    question: {\n        fontWeight: 700,\n        display: 'block',\n        paddingBottom: 15\n    }\n}))\n\nconst Question = ({text,reverse,subdimension,dimension,index,totalQs,setCanContinue}) => {\n    const classes = useStyles();\n    const [{answers},setState] = useStateValue();\n\n    const [answer,setAnswer] = useState(0);\n    const selectAnswer = e => {\n        if(e.target.value){\n            let ans = e.target.value;\n            if(e.target.value!==\"skip\"){\n                ans = parseInt(e.target.value)\n            }\n            setAnswer(ans);\n            saveAnswer(ans);\n        }\n    }\n\n    const questionCheck = ansArray => {\n        if(ansArray.length === totalQs && !ansArray.includes(undefined)){\n            setCanContinue(true)\n        }\n    }\n\n    const saveAnswer = score => {\n        let answerObj = {...answers};\n        answerObj[dimension][subdimension][index] = score;\n        setState({answers:answerObj});\n        questionCheck(answerObj[dimension][subdimension])\n    }\n\n    useEffect(()=>{\n        setAnswer(0);\n    }, [subdimension,dimension])\n\n    return (\n        <div className={classes.questionContainer}>  \n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.question}>{text}</FormLabel>\n                <RadioGroup row aria-label=\"Marital Status\" name=\"marital\" value={answer} onChange={selectAnswer}>\n                    <FormControlLabel labelPlacement=\"top\" value={reverse ? 5 : 1} control={<Radio />} label=\"1\" />\n                    <FormControlLabel labelPlacement=\"top\" value={reverse ? 4 : 2} control={<Radio />} label=\"2\" />\n                    <FormControlLabel labelPlacement=\"top\" value={reverse ? 3 : 3} control={<Radio />} label=\"3\" />\n                    <FormControlLabel labelPlacement=\"top\" value={reverse ? 2 : 4} control={<Radio />} label=\"4\" />\n                    <FormControlLabel labelPlacement=\"top\" value={reverse ? 1 : 5} control={<Radio />} label=\"5\" />\n                    <strong style={{margin: 20,marginBottom:0,fontStyle: 'italic'}}>  or  </strong>\n                    <FormControlLabel labelPlacement=\"top\" value=\"skip\" control={<Radio />} label={`I prefer not to answer`} />\n                </RadioGroup>\n            </FormControl>\n        </div>\n    )\n}\n\nexport default Question;","const hostname = window && window.location && window.location.hostname;\n\nexport const postsUrl = hostname.includes('fitexperience') ? 'http://results.thefitexperience.com' : 'http://localhost:8888/fit-backend';","import React, { useEffect, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { useStateValue } from '../../state';\nimport { ASSESSMENT_ORDER } from '../../constants.js'\nimport Question from './Question';\nimport { withRouter } from 'react-router';\nimport { Button } from '@material-ui/core';\nimport { postsUrl } from '../Config';\n\nconst Dimension = ({history,currentDimensionIndex,setCurrentDimensionIndex}) => {\n    const [{answers}] = useStateValue();\n\n    const currentDimension = ASSESSMENT_ORDER[currentDimensionIndex];\n    const [subdimentions, setSubdimentions] = useState(null);\n    const [currentSubdimentionIndex, setCurrentSubdimentionIndex] = useState(0);\n    const [canContinue, setCanContinue] = useState(false);\n\n    const [loading, setLoading] = useState(true)\n\n    useEffect(()=>{\n        fetchQuestions();\n        // eslint-disable-next-line\n    },[currentDimension])\n\n    const nextSection = () => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n        setCanContinue(false);\n        if( subdimentions.length > currentSubdimentionIndex + 1){\n            setCurrentSubdimentionIndex(currentSubdimentionIndex+1);\n        } else if (ASSESSMENT_ORDER.length > currentDimensionIndex+1) {\n            setCurrentDimensionIndex(currentDimensionIndex+1)\n        } else {\n            history.push('/results');\n        }\n    }\n\n    const fetchQuestions = () => {\n        setLoading(true);\n        let url = `${postsUrl}/wp-json/wp/v2/${currentDimension}?orderby=menu_order&order=asc`;\n        fetch(url, {\n            method: 'GET'\n        })\n        .then( response => response.json() )\n        .then( response => {\n            setLoading(false);\n            console.log(response);\n            setCurrentSubdimentionIndex(0);\n            setSubdimentions(response);\n            setupAnswerObj(response);\n        })\n        .catch( error => {\n            setLoading(false);\n            console.log(error);\n        })\n\n        const setupAnswerObj = response => {\n            let answerObj = {...answers};\n            response.forEach(sub => {\n                answerObj[currentDimension][sub.slug] = []\n            });\n        }  \n        \n    }\n\n    if(!subdimentions) {\n        return (\n            <>\n                {loading ? (\n                    <div>\n                        <h2>Loading</h2>\n                        <CircularProgress />\n                    </div>\n                ) : (\n                    null\n                )}\n            </>\n        )\n    };\n\n    return (\n        <div>\n            {loading ? (\n                <div>\n                    <h2>Loading</h2>\n                    <CircularProgress />\n                </div>\n            ) : (\n                <>\n                    <p style={{fontStyle:'italic',fontSize:12}}>\n                    There are no right or wrong answers so please answer these candidly.  Please rate how true\n                    the following statements are for you on a scale of 1-5:</p>\n                    <p style={{fontStyle:'italic',fontSize:12,textAlign:'center'}}>\n                    <b>1</b> = absolutely untrue; <b>2</b> = Mostly untrue; <b>3</b> = neither true nor untrue; <b>4</b> = Mostly true; <b>5</b> = absolutely\n                    true\n                    </p>\n                    {subdimentions[currentSubdimentionIndex].acf.questions.map((q,i)=>{\n                        return (\n                            <Question \n                                dimension={currentDimension} \n                                subdimension={subdimentions[currentSubdimentionIndex].slug} \n                                key={i} \n                                index={i} \n                                reverse={q.reverse_sort} \n                                text={q.question} \n                                totalQs={subdimentions[currentSubdimentionIndex].acf.questions.length}\n                                setCanContinue={setCanContinue}\n                            />\n                        );\n                    })}\n                    <div style={{marginTop:20}}>\n                        <Button variant=\"contained\" disabled={!canContinue} onClick={nextSection}>Continue</Button>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(Dimension);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport cog from '../../assets/cog.svg';\nimport emo from '../../assets/emo.svg';\nimport phy from '../../assets/phy.svg';\nimport fin from '../../assets/fin.svg';\nimport spi from '../../assets/spi.svg';\nimport { ASSESSMENT_ORDER } from '../../constants.js'\n\nconst useStyles = makeStyles(()=>({\n    progressWrapper: {\n        display: 'block',\n        textAlign: 'center'\n    },\n    progressSegment: {\n        display: 'inline-block',\n        width: '17%',\n        margin: '0 1%',\n        height: 5,\n        // background: '#ccc',\n        '& img': {\n            filter: 'grayscale(1)',\n            opacity: .4,\n            width: 70\n        }\n    },\n    cog: {\n        // background:'#c5e3fa',\n        '& img': {\n            filter: 'none',\n            opacity: 1,\n        }\n    },\n    emo: {\n        // background:'#79bdf2',\n        '& img': {\n            filter: 'none',\n            opacity: 1,\n        }\n    },\n    phy: {\n        // background:'#1e7ce1',\n        '& img': {\n            filter: 'none',\n            opacity: 1,\n        }\n    },\n    fin: {\n        // background:'#0140c9',\n        '& img': {\n            filter: 'none',\n            opacity: 1,\n        }\n    },\n    spi: {\n        // background:'#02188d',\n        '& img': {\n            filter: 'none',\n            opacity: 1,\n        }\n    }\n}))\n\nconst ProgressBar = ({currentDimensionIndex}) => {\n    const classes = useStyles();\n\n    console.log(classes.dimColors);\n\n    return (\n        <div className={classes.progressWrapper}>\n            {ASSESSMENT_ORDER.map((dim,i)=>{\n                return (\n                    <div key={i} className={`${classes.progressSegment}\n                    ${i===0 && currentDimensionIndex >= i \n                    ? classes.cog : i===1 && currentDimensionIndex >= i\n                    ? classes.emo : i===2 && currentDimensionIndex >= i\n                    ? classes.phy : i===3 && currentDimensionIndex >= i \n                    ? classes.fin : i===4 && currentDimensionIndex >= i \n                    ? classes.spi : ''}`}>\n                        { i === 0 && <img src={cog} alt=\"dimension logo\" />}\n                        { i === 1 && <img src={emo} alt=\"dimension logo\" />}\n                        { i === 2 && <img src={phy} alt=\"dimension logo\" />}\n                        { i === 3 && <img src={fin} alt=\"dimension logo\" />}\n                        { i === 4 && <img src={spi} alt=\"dimension logo\" />}    \n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\n\nimport Dimension from './Dimension';\nimport ProgressBar from './ProgressBar';\n\nconst Questionnaire = () => {\n    const [currentDimensionIndex,setCurrentDimensionIndex] = useState(0);\n\n    return (\n        <>\n            <ProgressBar currentDimensionIndex={currentDimensionIndex} />\n            <Dimension currentDimensionIndex={currentDimensionIndex} setCurrentDimensionIndex={setCurrentDimensionIndex} />\n        </>\n    )\n}\n\nexport default withRouter(Questionnaire);","import React, { useEffect } from \"react\";\nimport { withRouter } from 'react-router';\n\n// eslint-disable-next-line\nimport { sampleResults } from '../sampleResults';\nimport { useStateValue } from '../../state';\nimport { CircularProgress } from \"@material-ui/core\";\nimport { postsUrl } from '../Config';\n\nconst Results = ({history}) =>  {\n  const [{\n    answers,\n    name,\n    email,\n    age,\n    income,\n    weight,\n    height,\n    gender,\n    occupation,\n    marital\n  }] = useStateValue();\n\n  let average = array => {\n    let avg = array.reduce((a, b) => parseInt(a) + parseInt(b)) / array.length;\n    return parseFloat(avg.toFixed(2));\n  };\n\n  const formatForURL = results => {\n    console.log(results)\n    let urlObj = {};\n    let grandTotal = [];\n    for (var sub in results) {\n      let dimTotal = [];\n      for (var property in results[sub]){\n        let arr = results[sub][property].filter(item => item !== 'skip')\n        if(arr.length){\n          let key = `${sub.substr(0,1)}-${property}`;\n          let avg = average(arr)*4;\n          urlObj[key] = avg;\n          dimTotal.push(avg);\n          grandTotal.push(avg);\n        }\n      }\n      if(dimTotal.length){\n        urlObj[`t-${sub}-score`] = average(dimTotal);\n      }\n    }\n    urlObj['t-overall-score'] = average(grandTotal);\n    console.log(urlObj);\n    return urlObj;\n  }\n\n  function toQueryString(obj) {\n    var parts = [];\n    for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            parts.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(obj[i]));\n        }\n    }\n    return parts.join(\"&\");\n}\n\nconst addDemoData = obj => {\n  [{'participant': name}, {email: email}, {age: age}, {income: income}, {weight: weight}, {height: height}, {gender: gender}, {occupation: occupation}, {marital: marital}].forEach((demo)=> {\n    let key = Object.keys(demo)[0];\n    if(demo[key] !== ''){\n      obj[key] = demo[key]\n    }\n  })\n  return obj;\n}\n\nfunction randomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\n  useEffect(() => {\n    let proceed = false;\n    Object.keys(answers).forEach(key => {\n      if(Object.entries(answers[key]).length > 0){\n        proceed = true;\n        return;\n      }\n    });\n    if(proceed){\n      let dataSend = formatForURL(answers);\n      dataSend = addDemoData(dataSend);\n      if(dataSend){\n        dataSend.nodupe = randomNumber(1,999999)\n        window.location = `${postsUrl}/results?${toQueryString(dataSend)}`\n      }\n    } else {\n      history.push('/');\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <CircularProgress />\n  );\n}\n\nexport default withRouter(Results);","import React from 'react';\n\nimport Logo from '../assets/logo.png';\n\nconst Header = () => {\n    return (\n        <div id=\"header\">\n            <img id=\"logo\" src={Logo} alt=\"FIT Logo\" />\n        </div>\n    );\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport ReactHtmlParser from 'react-html-parser'; \n\nimport Header from './Header';\nimport { postsUrl } from './Config';\n\nconst LandingPage = ({history}) => {\n\n    const [loading, setLoading] = useState(false);\n    const [content, setContent] = useState('')\n\n    const fetchContent = () => {\n        setLoading(true);\n        let url = `${postsUrl}/wp-json/wp/v2/pages/116`;\n        fetch(url, {\n            method: 'GET'\n        })\n        .then( response => response.json() )\n        .then( response => {\n            setLoading(false);\n            setContent(response.content.rendered);\n        })\n        .catch( error => {\n            setLoading(false);\n            console.log(error);\n        })\n        \n    }\n\n    useEffect(()=>{\n        fetchContent();\n    },[])\n\n    return (\n        <>\n            <Header />\n            {loading ? (\n                <div>\n                    <h2>Loading</h2>\n                    <CircularProgress />\n                </div>\n            ) : (\n                <>  \n                    {ReactHtmlParser(content) }\n                    <Button variant=\"contained\" onClick={()=>{history.push('/your-info')}}>Begin!</Button>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default withRouter(LandingPage);","import React, { useState, useRef } from 'react';\nimport { withRouter } from 'react-router';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useStateValue } from '../state'; \n\nconst useStyles = makeStyles(()=>({\n    form: {\n        '& .MuiFormControl-root': {\n            width: '45%',\n            marginRight: '5%',\n            marginBottom: 20,\n            '@media(max-width:480px)':{\n                width:'100%'\n            }\n        }\n    }\n}))\n\nconst DemoFields = ({history}) => {\n    const classes = useStyles();\n    const [{},setState] = useStateValue();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [age, setAge] = useState(''); \n    const [income, setIncome] = useState('');\n    const [weight, setWeight] = useState('');\n    const [height, setHeight] = useState('');\n    const [error, setError] = useState('');\n    const [invalidEmail, setInvalidEmail] = useState(false);\n    const [invalidName, setInvalidName] = useState(false);\n    const [gender, setGender] = useState('female');\n    const [occupation, setOccupation] = useState('student');\n    const [marital, setMarital] = useState('single');\n\n    const nameRef = useRef(null);\n    const emailRef = useRef(null);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if( invalidName || invalidEmail){\n            console.log('erre')\n            setError('Please fix the highlighted field(s) above')\n            if( invalidName ){\n                if(nameRef.current){\n                    nameRef.current.focus()\n                }\n            }\n            if( invalidEmail ){\n                if(emailRef.current){\n                    emailRef.current.focus()\n                } \n            }\n            return;\n        } else {\n            setState({\n                name,\n                email,\n                age,\n                income,\n                weight,\n                height,\n                gender,\n                occupation,\n                marital\n            })\n            history.push('/assessment');\n        }\n    }\n\n    const validateEmail = () => {\n        const emailRegx=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        setInvalidEmail(!emailRegx.test(email));\n    }\n\n    const validateName = () => {\n        setInvalidName(name === '');\n    }\n\n    return (\n        <form className={classes.form} onSubmit={handleSubmit}>\n            <h1>Your info</h1>\n            <div className={classes.formControl}>\n                <TextField variant=\"outlined\" required={true} ref={nameRef} label=\"Name\" error={invalidName} value={name} onChange={(event)=>setName(event.target.value)} onBlur={validateName}></TextField>\n                <TextField variant=\"outlined\" required={true} ref={emailRef} label=\"Email\" error={invalidEmail} helperText={invalidEmail ? \"Invalid entry.\" : \"\"} value={email} onChange={(event)=>setEmail(event.target.value)} onBlur={validateEmail}></TextField>\n            </div> \n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={gender} onChange={(event)=>setGender(event.target.value)}>\n                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                    <FormControlLabel value=\"no-answer\" control={<Radio />} label=\"I prefer not to answer\" />\n                </RadioGroup>\n            </FormControl>\n            <div className={classes.formControl}>\n                <TextField variant=\"outlined\" label=\"Age (optional)\" value={age} onChange={(event)=>setAge(event.target.value)}></TextField>\n                <TextField variant=\"outlined\" label=\"Annual Household Income (optional)\" value={income} onChange={(event)=>setIncome(event.target.value)}></TextField>\n            </div>\n            <div className={classes.formControl}>\n                <TextField variant=\"outlined\" label=\"Height (optional)\" value={height} onChange={(event)=>setHeight(event.target.value)}></TextField>\n                <TextField variant=\"outlined\" label=\"Weight (optional)\" value={weight} onChange={(event)=>setWeight(event.target.value)}></TextField>\n            </div>\n            <div className={classes.formControl}>\n                <br></br>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Occupation</FormLabel>\n                    <RadioGroup aria-label=\"Occupation\" name=\"occupation\" value={occupation} onChange={(event)=>setOccupation(event.target.value)}>\n                        <FormControlLabel value=\"student\" control={<Radio />} label=\"Student\" />\n                        <FormControlLabel value=\"professional\" control={<Radio />} label=\"Professional\" />\n                        <FormControlLabel value=\"retiree\" control={<Radio />} label=\"Retiree\" />\n                        <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                    </RadioGroup>\n                </FormControl>\n\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Marital Status</FormLabel>\n                    <RadioGroup aria-label=\"Marital Status\" name=\"marital\" value={marital} onChange={(event)=>setMarital(event.target.value)}>\n                        <FormControlLabel value=\"single\" control={<Radio />} label=\"Single\" />\n                        <FormControlLabel value=\"married\" control={<Radio />} label=\"Married\" />\n                        <FormControlLabel value=\"living-with-so\" control={<Radio />} label=\"Living with significant other\" />\n                        <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                    </RadioGroup>\n                </FormControl>\n\n            </div>\n            {error && <Typography style={{color:'#f44336'}}>{error}</Typography>}\n            <br/>\n            <Button variant=\"contained\" type=\"submit\">Continue</Button>\n        </form>\n    )\n}\n\nexport default withRouter(DemoFields);","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router\";\n\nimport Questionnaire from './components/Assessment/Questionnaire';\nimport Results from './components/Results/Results';\nimport LandingPage from './components/LandingPage';\nimport DemoFields from \"./components/DemoFields\";\n\nconst App = ({ location, history }) => {\n  return (\n    <div id=\"page-container\">\n      <Switch>\n        <Route exact path='/' render={LandingPage} />\n        <Route path='/assessment' render={Questionnaire} />\n        <Route path='/your-info' render={DemoFields} />\n        <Route path='/results' render={Results} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport App from './App';\nimport { StateProvider, reducer } from './state';\nimport initialState from './state/initial';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <StateProvider initialState={initialState} reducer={reducer}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n    questionnaireId: null,\n    questionnaireTitle: null,\n    questions: [],\n    answers: {\n        cognitive: {},\n        emotional: {},\n        physical: {},\n        financial: {},\n        spiritual: {},\n    },\n    name: 'Leo',\n    email: 'l@leo.com',\n    age: '27',\n    income: '50,000',\n    weight: '170',\n    height: '5 foot 10',\n    gender: 'male',\n    occupation: 'professional',\n    marital: 'single'\n};\n  ","module.exports = __webpack_public_path__ + \"static/media/cog.a9063339.svg\";","module.exports = __webpack_public_path__ + \"static/media/emo.671822c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/phy.95da910b.svg\";","module.exports = __webpack_public_path__ + \"static/media/fin.0864f32a.svg\";","module.exports = __webpack_public_path__ + \"static/media/spi.10d304c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d0d785cc.png\";"],"sourceRoot":""}